// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msgperformance.proto

#include "msgperformance.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_msgperformance_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_msgperformance_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_dmnode_xmsg;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_msgperformance_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_dmnode_xtotal;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_msgperformance_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_dmmeta_MapXmsgEntry_DoNotUse;
}  // namespace protobuf_msgperformance_2eproto
namespace msgperformance {
class dmnode_xmsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<dmnode_xmsg>
      _instance;
} _dmnode_xmsg_default_instance_;
class dmnode_xtotalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<dmnode_xtotal>
      _instance;
} _dmnode_xtotal_default_instance_;
class dmmeta_MapXmsgEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<dmmeta_MapXmsgEntry_DoNotUse>
      _instance;
} _dmmeta_MapXmsgEntry_DoNotUse_default_instance_;
class dmmetaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<dmmeta>
      _instance;
} _dmmeta_default_instance_;
}  // namespace msgperformance
namespace protobuf_msgperformance_2eproto {
static void InitDefaultsdmnode_xmsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::msgperformance::_dmnode_xmsg_default_instance_;
    new (ptr) ::msgperformance::dmnode_xmsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::msgperformance::dmnode_xmsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_dmnode_xmsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsdmnode_xmsg}, {}};

static void InitDefaultsdmnode_xtotal() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::msgperformance::_dmnode_xtotal_default_instance_;
    new (ptr) ::msgperformance::dmnode_xtotal();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::msgperformance::dmnode_xtotal::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_dmnode_xtotal =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsdmnode_xtotal}, {}};

static void InitDefaultsdmmeta_MapXmsgEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::msgperformance::_dmmeta_MapXmsgEntry_DoNotUse_default_instance_;
    new (ptr) ::msgperformance::dmmeta_MapXmsgEntry_DoNotUse();
  }
  ::msgperformance::dmmeta_MapXmsgEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_dmmeta_MapXmsgEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsdmmeta_MapXmsgEntry_DoNotUse}, {
      &protobuf_msgperformance_2eproto::scc_info_dmnode_xmsg.base,}};

static void InitDefaultsdmmeta() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::msgperformance::_dmmeta_default_instance_;
    new (ptr) ::msgperformance::dmmeta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::msgperformance::dmmeta::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_dmmeta =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsdmmeta}, {
      &protobuf_msgperformance_2eproto::scc_info_dmmeta_MapXmsgEntry_DoNotUse.base,
      &protobuf_msgperformance_2eproto::scc_info_dmnode_xtotal.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_dmnode_xmsg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_dmnode_xtotal.base);
  ::google::protobuf::internal::InitSCC(&scc_info_dmmeta_MapXmsgEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_dmmeta.base);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::msgperformance::dmnode_xmsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::msgperformance::dmnode_xmsg, msgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::msgperformance::dmnode_xmsg, maxconsumetime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::msgperformance::dmnode_xmsg, avgconsumetime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::msgperformance::dmnode_xmsg, totalconsumetime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::msgperformance::dmnode_xmsg, msgcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::msgperformance::dmnode_xmsg, totalmsgsize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::msgperformance::dmnode_xmsg, lasttime_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::msgperformance::dmnode_xtotal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::msgperformance::dmnode_xtotal, totalsize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::msgperformance::dmmeta_MapXmsgEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::msgperformance::dmmeta_MapXmsgEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::msgperformance::dmmeta_MapXmsgEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::msgperformance::dmmeta_MapXmsgEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::msgperformance::dmmeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::msgperformance::dmmeta, map_xmsg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::msgperformance::dmmeta, xtotal_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::msgperformance::dmnode_xmsg)},
  { 12, -1, sizeof(::msgperformance::dmnode_xtotal)},
  { 18, 25, sizeof(::msgperformance::dmmeta_MapXmsgEntry_DoNotUse)},
  { 27, -1, sizeof(::msgperformance::dmmeta)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::msgperformance::_dmnode_xmsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::msgperformance::_dmnode_xtotal_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::msgperformance::_dmmeta_MapXmsgEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::msgperformance::_dmmeta_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "msgperformance.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024msgperformance.proto\022\016msgperformance\"\240"
      "\001\n\013dmnode_xmsg\022\r\n\005msgid\030\001 \001(\r\022\026\n\016maxcons"
      "umetime\030\002 \001(\004\022\026\n\016avgconsumetime\030\003 \001(\004\022\030\n"
      "\020totalconsumetime\030\004 \001(\004\022\020\n\010msgcount\030\005 \001("
      "\004\022\024\n\014totalmsgsize\030\006 \001(\004\022\020\n\010lasttime\030\007 \001("
      "\t\"\"\n\rdmnode_xtotal\022\021\n\ttotalsize\030\001 \001(\004\"\273\001"
      "\n\006dmmeta\0225\n\010map_xmsg\030\001 \003(\0132#.msgperforma"
      "nce.dmmeta.MapXmsgEntry\022-\n\006xtotal\030\002 \001(\0132"
      "\035.msgperformance.dmnode_xtotal\032K\n\014MapXms"
      "gEntry\022\013\n\003key\030\001 \001(\r\022*\n\005value\030\002 \001(\0132\033.msg"
      "performance.dmnode_xmsg:\0028\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 435);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "msgperformance.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_msgperformance_2eproto
namespace msgperformance {

// ===================================================================

void dmnode_xmsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int dmnode_xmsg::kMsgidFieldNumber;
const int dmnode_xmsg::kMaxconsumetimeFieldNumber;
const int dmnode_xmsg::kAvgconsumetimeFieldNumber;
const int dmnode_xmsg::kTotalconsumetimeFieldNumber;
const int dmnode_xmsg::kMsgcountFieldNumber;
const int dmnode_xmsg::kTotalmsgsizeFieldNumber;
const int dmnode_xmsg::kLasttimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

dmnode_xmsg::dmnode_xmsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msgperformance_2eproto::scc_info_dmnode_xmsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:msgperformance.dmnode_xmsg)
}
dmnode_xmsg::dmnode_xmsg(const dmnode_xmsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  lasttime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.lasttime().size() > 0) {
    lasttime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lasttime_);
  }
  ::memcpy(&maxconsumetime_, &from.maxconsumetime_,
    static_cast<size_t>(reinterpret_cast<char*>(&msgid_) -
    reinterpret_cast<char*>(&maxconsumetime_)) + sizeof(msgid_));
  // @@protoc_insertion_point(copy_constructor:msgperformance.dmnode_xmsg)
}

void dmnode_xmsg::SharedCtor() {
  lasttime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&maxconsumetime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msgid_) -
      reinterpret_cast<char*>(&maxconsumetime_)) + sizeof(msgid_));
}

dmnode_xmsg::~dmnode_xmsg() {
  // @@protoc_insertion_point(destructor:msgperformance.dmnode_xmsg)
  SharedDtor();
}

void dmnode_xmsg::SharedDtor() {
  lasttime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void dmnode_xmsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* dmnode_xmsg::descriptor() {
  ::protobuf_msgperformance_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msgperformance_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const dmnode_xmsg& dmnode_xmsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msgperformance_2eproto::scc_info_dmnode_xmsg.base);
  return *internal_default_instance();
}


void dmnode_xmsg::Clear() {
// @@protoc_insertion_point(message_clear_start:msgperformance.dmnode_xmsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lasttime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&maxconsumetime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msgid_) -
      reinterpret_cast<char*>(&maxconsumetime_)) + sizeof(msgid_));
  _internal_metadata_.Clear();
}

bool dmnode_xmsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msgperformance.dmnode_xmsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 msgid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 maxconsumetime = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &maxconsumetime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 avgconsumetime = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &avgconsumetime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 totalconsumetime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &totalconsumetime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgcount = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 totalmsgsize = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &totalmsgsize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string lasttime = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lasttime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->lasttime().data(), static_cast<int>(this->lasttime().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "msgperformance.dmnode_xmsg.lasttime"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msgperformance.dmnode_xmsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msgperformance.dmnode_xmsg)
  return false;
#undef DO_
}

void dmnode_xmsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msgperformance.dmnode_xmsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 msgid = 1;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->msgid(), output);
  }

  // uint64 maxconsumetime = 2;
  if (this->maxconsumetime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->maxconsumetime(), output);
  }

  // uint64 avgconsumetime = 3;
  if (this->avgconsumetime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->avgconsumetime(), output);
  }

  // uint64 totalconsumetime = 4;
  if (this->totalconsumetime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->totalconsumetime(), output);
  }

  // uint64 msgcount = 5;
  if (this->msgcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->msgcount(), output);
  }

  // uint64 totalmsgsize = 6;
  if (this->totalmsgsize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->totalmsgsize(), output);
  }

  // string lasttime = 7;
  if (this->lasttime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lasttime().data(), static_cast<int>(this->lasttime().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "msgperformance.dmnode_xmsg.lasttime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->lasttime(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:msgperformance.dmnode_xmsg)
}

::google::protobuf::uint8* dmnode_xmsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:msgperformance.dmnode_xmsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 msgid = 1;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->msgid(), target);
  }

  // uint64 maxconsumetime = 2;
  if (this->maxconsumetime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->maxconsumetime(), target);
  }

  // uint64 avgconsumetime = 3;
  if (this->avgconsumetime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->avgconsumetime(), target);
  }

  // uint64 totalconsumetime = 4;
  if (this->totalconsumetime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->totalconsumetime(), target);
  }

  // uint64 msgcount = 5;
  if (this->msgcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->msgcount(), target);
  }

  // uint64 totalmsgsize = 6;
  if (this->totalmsgsize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->totalmsgsize(), target);
  }

  // string lasttime = 7;
  if (this->lasttime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lasttime().data(), static_cast<int>(this->lasttime().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "msgperformance.dmnode_xmsg.lasttime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->lasttime(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msgperformance.dmnode_xmsg)
  return target;
}

size_t dmnode_xmsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:msgperformance.dmnode_xmsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string lasttime = 7;
  if (this->lasttime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->lasttime());
  }

  // uint64 maxconsumetime = 2;
  if (this->maxconsumetime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->maxconsumetime());
  }

  // uint64 avgconsumetime = 3;
  if (this->avgconsumetime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->avgconsumetime());
  }

  // uint64 totalconsumetime = 4;
  if (this->totalconsumetime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->totalconsumetime());
  }

  // uint64 msgcount = 5;
  if (this->msgcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgcount());
  }

  // uint64 totalmsgsize = 6;
  if (this->totalmsgsize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->totalmsgsize());
  }

  // uint32 msgid = 1;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void dmnode_xmsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msgperformance.dmnode_xmsg)
  GOOGLE_DCHECK_NE(&from, this);
  const dmnode_xmsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const dmnode_xmsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msgperformance.dmnode_xmsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msgperformance.dmnode_xmsg)
    MergeFrom(*source);
  }
}

void dmnode_xmsg::MergeFrom(const dmnode_xmsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msgperformance.dmnode_xmsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.lasttime().size() > 0) {

    lasttime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lasttime_);
  }
  if (from.maxconsumetime() != 0) {
    set_maxconsumetime(from.maxconsumetime());
  }
  if (from.avgconsumetime() != 0) {
    set_avgconsumetime(from.avgconsumetime());
  }
  if (from.totalconsumetime() != 0) {
    set_totalconsumetime(from.totalconsumetime());
  }
  if (from.msgcount() != 0) {
    set_msgcount(from.msgcount());
  }
  if (from.totalmsgsize() != 0) {
    set_totalmsgsize(from.totalmsgsize());
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
}

void dmnode_xmsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msgperformance.dmnode_xmsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void dmnode_xmsg::CopyFrom(const dmnode_xmsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msgperformance.dmnode_xmsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool dmnode_xmsg::IsInitialized() const {
  return true;
}

void dmnode_xmsg::Swap(dmnode_xmsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void dmnode_xmsg::InternalSwap(dmnode_xmsg* other) {
  using std::swap;
  lasttime_.Swap(&other->lasttime_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(maxconsumetime_, other->maxconsumetime_);
  swap(avgconsumetime_, other->avgconsumetime_);
  swap(totalconsumetime_, other->totalconsumetime_);
  swap(msgcount_, other->msgcount_);
  swap(totalmsgsize_, other->totalmsgsize_);
  swap(msgid_, other->msgid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata dmnode_xmsg::GetMetadata() const {
  protobuf_msgperformance_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msgperformance_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void dmnode_xtotal::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int dmnode_xtotal::kTotalsizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

dmnode_xtotal::dmnode_xtotal()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msgperformance_2eproto::scc_info_dmnode_xtotal.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:msgperformance.dmnode_xtotal)
}
dmnode_xtotal::dmnode_xtotal(const dmnode_xtotal& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  totalsize_ = from.totalsize_;
  // @@protoc_insertion_point(copy_constructor:msgperformance.dmnode_xtotal)
}

void dmnode_xtotal::SharedCtor() {
  totalsize_ = GOOGLE_ULONGLONG(0);
}

dmnode_xtotal::~dmnode_xtotal() {
  // @@protoc_insertion_point(destructor:msgperformance.dmnode_xtotal)
  SharedDtor();
}

void dmnode_xtotal::SharedDtor() {
}

void dmnode_xtotal::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* dmnode_xtotal::descriptor() {
  ::protobuf_msgperformance_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msgperformance_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const dmnode_xtotal& dmnode_xtotal::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msgperformance_2eproto::scc_info_dmnode_xtotal.base);
  return *internal_default_instance();
}


void dmnode_xtotal::Clear() {
// @@protoc_insertion_point(message_clear_start:msgperformance.dmnode_xtotal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  totalsize_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool dmnode_xtotal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msgperformance.dmnode_xtotal)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 totalsize = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &totalsize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msgperformance.dmnode_xtotal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msgperformance.dmnode_xtotal)
  return false;
#undef DO_
}

void dmnode_xtotal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msgperformance.dmnode_xtotal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 totalsize = 1;
  if (this->totalsize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->totalsize(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:msgperformance.dmnode_xtotal)
}

::google::protobuf::uint8* dmnode_xtotal::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:msgperformance.dmnode_xtotal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 totalsize = 1;
  if (this->totalsize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->totalsize(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msgperformance.dmnode_xtotal)
  return target;
}

size_t dmnode_xtotal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:msgperformance.dmnode_xtotal)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 totalsize = 1;
  if (this->totalsize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->totalsize());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void dmnode_xtotal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msgperformance.dmnode_xtotal)
  GOOGLE_DCHECK_NE(&from, this);
  const dmnode_xtotal* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const dmnode_xtotal>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msgperformance.dmnode_xtotal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msgperformance.dmnode_xtotal)
    MergeFrom(*source);
  }
}

void dmnode_xtotal::MergeFrom(const dmnode_xtotal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msgperformance.dmnode_xtotal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.totalsize() != 0) {
    set_totalsize(from.totalsize());
  }
}

void dmnode_xtotal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msgperformance.dmnode_xtotal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void dmnode_xtotal::CopyFrom(const dmnode_xtotal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msgperformance.dmnode_xtotal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool dmnode_xtotal::IsInitialized() const {
  return true;
}

void dmnode_xtotal::Swap(dmnode_xtotal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void dmnode_xtotal::InternalSwap(dmnode_xtotal* other) {
  using std::swap;
  swap(totalsize_, other->totalsize_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata dmnode_xtotal::GetMetadata() const {
  protobuf_msgperformance_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msgperformance_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

dmmeta_MapXmsgEntry_DoNotUse::dmmeta_MapXmsgEntry_DoNotUse() {}
dmmeta_MapXmsgEntry_DoNotUse::dmmeta_MapXmsgEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void dmmeta_MapXmsgEntry_DoNotUse::MergeFrom(const dmmeta_MapXmsgEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata dmmeta_MapXmsgEntry_DoNotUse::GetMetadata() const {
  ::protobuf_msgperformance_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msgperformance_2eproto::file_level_metadata[2];
}
void dmmeta_MapXmsgEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void dmmeta::InitAsDefaultInstance() {
  ::msgperformance::_dmmeta_default_instance_._instance.get_mutable()->xtotal_ = const_cast< ::msgperformance::dmnode_xtotal*>(
      ::msgperformance::dmnode_xtotal::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int dmmeta::kMapXmsgFieldNumber;
const int dmmeta::kXtotalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

dmmeta::dmmeta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msgperformance_2eproto::scc_info_dmmeta.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:msgperformance.dmmeta)
}
dmmeta::dmmeta(const dmmeta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  map_xmsg_.MergeFrom(from.map_xmsg_);
  if (from.has_xtotal()) {
    xtotal_ = new ::msgperformance::dmnode_xtotal(*from.xtotal_);
  } else {
    xtotal_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:msgperformance.dmmeta)
}

void dmmeta::SharedCtor() {
  xtotal_ = NULL;
}

dmmeta::~dmmeta() {
  // @@protoc_insertion_point(destructor:msgperformance.dmmeta)
  SharedDtor();
}

void dmmeta::SharedDtor() {
  if (this != internal_default_instance()) delete xtotal_;
}

void dmmeta::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* dmmeta::descriptor() {
  ::protobuf_msgperformance_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msgperformance_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const dmmeta& dmmeta::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msgperformance_2eproto::scc_info_dmmeta.base);
  return *internal_default_instance();
}


void dmmeta::Clear() {
// @@protoc_insertion_point(message_clear_start:msgperformance.dmmeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  map_xmsg_.Clear();
  if (GetArenaNoVirtual() == NULL && xtotal_ != NULL) {
    delete xtotal_;
  }
  xtotal_ = NULL;
  _internal_metadata_.Clear();
}

bool dmmeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msgperformance.dmmeta)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<uint32, .msgperformance.dmnode_xmsg> map_xmsg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          dmmeta_MapXmsgEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              dmmeta_MapXmsgEntry_DoNotUse,
              ::google::protobuf::uint32, ::msgperformance::dmnode_xmsg,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::msgperformance::dmnode_xmsg > > parser(&map_xmsg_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .msgperformance.dmnode_xtotal xtotal = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_xtotal()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msgperformance.dmmeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msgperformance.dmmeta)
  return false;
#undef DO_
}

void dmmeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msgperformance.dmmeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, .msgperformance.dmnode_xmsg> map_xmsg = 1;
  if (!this->map_xmsg().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::msgperformance::dmnode_xmsg >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->map_xmsg().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_xmsg().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::msgperformance::dmnode_xmsg >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::msgperformance::dmnode_xmsg >::const_iterator
          it = this->map_xmsg().begin();
          it != this->map_xmsg().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<dmmeta_MapXmsgEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_xmsg_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    } else {
      ::std::unique_ptr<dmmeta_MapXmsgEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::msgperformance::dmnode_xmsg >::const_iterator
          it = this->map_xmsg().begin();
          it != this->map_xmsg().end(); ++it) {
        entry.reset(map_xmsg_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    }
  }

  // .msgperformance.dmnode_xtotal xtotal = 2;
  if (this->has_xtotal()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_xtotal(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:msgperformance.dmmeta)
}

::google::protobuf::uint8* dmmeta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:msgperformance.dmmeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, .msgperformance.dmnode_xmsg> map_xmsg = 1;
  if (!this->map_xmsg().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::msgperformance::dmnode_xmsg >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->map_xmsg().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_xmsg().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::msgperformance::dmnode_xmsg >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::msgperformance::dmnode_xmsg >::const_iterator
          it = this->map_xmsg().begin();
          it != this->map_xmsg().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<dmmeta_MapXmsgEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_xmsg_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    } else {
      ::std::unique_ptr<dmmeta_MapXmsgEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::msgperformance::dmnode_xmsg >::const_iterator
          it = this->map_xmsg().begin();
          it != this->map_xmsg().end(); ++it) {
        entry.reset(map_xmsg_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    }
  }

  // .msgperformance.dmnode_xtotal xtotal = 2;
  if (this->has_xtotal()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_xtotal(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msgperformance.dmmeta)
  return target;
}

size_t dmmeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:msgperformance.dmmeta)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, .msgperformance.dmnode_xmsg> map_xmsg = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->map_xmsg_size());
  {
    ::std::unique_ptr<dmmeta_MapXmsgEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::msgperformance::dmnode_xmsg >::const_iterator
        it = this->map_xmsg().begin();
        it != this->map_xmsg().end(); ++it) {
      entry.reset(map_xmsg_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // .msgperformance.dmnode_xtotal xtotal = 2;
  if (this->has_xtotal()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *xtotal_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void dmmeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msgperformance.dmmeta)
  GOOGLE_DCHECK_NE(&from, this);
  const dmmeta* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const dmmeta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msgperformance.dmmeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msgperformance.dmmeta)
    MergeFrom(*source);
  }
}

void dmmeta::MergeFrom(const dmmeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msgperformance.dmmeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  map_xmsg_.MergeFrom(from.map_xmsg_);
  if (from.has_xtotal()) {
    mutable_xtotal()->::msgperformance::dmnode_xtotal::MergeFrom(from.xtotal());
  }
}

void dmmeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msgperformance.dmmeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void dmmeta::CopyFrom(const dmmeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msgperformance.dmmeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool dmmeta::IsInitialized() const {
  return true;
}

void dmmeta::Swap(dmmeta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void dmmeta::InternalSwap(dmmeta* other) {
  using std::swap;
  map_xmsg_.Swap(&other->map_xmsg_);
  swap(xtotal_, other->xtotal_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata dmmeta::GetMetadata() const {
  protobuf_msgperformance_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msgperformance_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace msgperformance
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::msgperformance::dmnode_xmsg* Arena::CreateMaybeMessage< ::msgperformance::dmnode_xmsg >(Arena* arena) {
  return Arena::CreateInternal< ::msgperformance::dmnode_xmsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::msgperformance::dmnode_xtotal* Arena::CreateMaybeMessage< ::msgperformance::dmnode_xtotal >(Arena* arena) {
  return Arena::CreateInternal< ::msgperformance::dmnode_xtotal >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::msgperformance::dmmeta_MapXmsgEntry_DoNotUse* Arena::CreateMaybeMessage< ::msgperformance::dmmeta_MapXmsgEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::msgperformance::dmmeta_MapXmsgEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::msgperformance::dmmeta* Arena::CreateMaybeMessage< ::msgperformance::dmmeta >(Arena* arena) {
  return Arena::CreateInternal< ::msgperformance::dmmeta >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
